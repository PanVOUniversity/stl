name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libgtest-dev doxygen graphviz clang-format
        
    - name: Build project
      run: |
        make clean
        make all
        
    - name: Run tests
      run: |
        make tests
        
    - name: Generate documentation
      run: |
        make docs
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs/
        retention-days: 30
        
  code-coverage:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential lcov
        
    - name: Build with coverage
      run: |
        make clean
        CXXFLAGS="-std=c++20 -Wall -Wextra -pedantic -O2 --coverage" make all
        
    - name: Run tests with coverage
      run: |
        make tests
        
    - name: Generate coverage report
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security scan
      run: |
        # Здесь можно добавить инструменты для сканирования безопасности
        echo "Security scan completed"
        
  performance-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        
    - name: Build project
      run: |
        make clean
        make all
        
    - name: Run performance tests
      run: |
        # Здесь можно добавить тесты производительности
        echo "Performance tests completed" 